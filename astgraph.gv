strict digraph G {
Game_Int	 [label="Game Int"];
List_Char	 [label="[Char]"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
Char	 [label="Char"];
BoardDef	 [label="BoardDef"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
InputDef	 [label="InputDef"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
List_ValDef_Int	 [label="[ValDef Int]"];
ValDef_Int	 [label="ValDef Int"];
Signature	 [label="Signature"];
Type	 [label="Type"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
List_Char	 [label="[Char]"];
Char	 [label="Char"];
Char	 [label="Char"];
Equation_Int	 [label="Equation Int"];
Expr_Int	 [label="Expr Int"];
Int	 [label="Int"];
ValDef_Int	 [label="ValDef Int"];
Signature	 [label="Signature"];
Type	 [label="Type"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
List_Char	 [label="[Char]"];
Char	 [label="Char"];
Char	 [label="Char"];
BoardEq_Int	 [label="BoardEq Int"];
Pos	 [label="Pos"];
Pos	 [label="Pos"];
Expr_Int	 [label="Expr Int"];
Int	 [label="Int"];
ValDef_Int	 [label="ValDef Int"];
Signature	 [label="Signature"];
Type	 [label="Type"];
Ftype	 [label="Ftype"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
Xtype	 [label="Xtype"];
Btype	 [label="Btype"];
List_Char	 [label="[Char]"];
Char	 [label="Char"];
Char	 [label="Char"];
Equation_Int	 [label="Equation Int"];
Parlist	 [label="Parlist"];
Expr_Int	 [label="Expr Int"];
Op	 [label="Op"];
Expr_Int	 [label="Expr Int"];
Expr_Int	 [label="Expr Int"];
Int	 [label="Int"];
Game_Int	->	List_Char	 [label="Game"];
Game_Int	->	BoardDef	 [label="Game"];
Game_Int	->	InputDef	 [label="Game"];
Game_Int	->	List_ValDef_Int	 [label="Game"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
List_Char	->	Char	 [label="(:)"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
Char	->	Concept	 [label="prim"];
BoardDef	->	Xtype	 [label="BoardDef"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Itype"];
InputDef	->	Xtype	 [label="InputDef"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Itype"];
List_ValDef_Int	->	ValDef_Int	 [label="(:)"];
List_ValDef_Int	->	ValDef_Int	 [label="(:)"];
List_ValDef_Int	->	ValDef_Int	 [label="(:)"];
ValDef_Int	->	Signature	 [label="Val"];
ValDef_Int	->	Equation_Int	 [label="Val"];
ValDef_Int	->	Int	 [label="Val"];
Signature	->	Type	 [label="Sig"];
Signature	->	List_Char	 [label="Sig"];
Type	->	Xtype	 [label="Plain"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Itype"];
Equation_Int	->	Expr_Int	 [label="Veq"];
Expr_Int	->	Concept	 [label="I"];
Int	->	Concept	 [label="prim"];
ValDef_Int	->	BoardEq_Int	 [label="BVal"];
ValDef_Int	->	Signature	 [label="BVal"];
ValDef_Int	->	Int	 [label="BVal"];
Signature	->	Type	 [label="Sig"];
Signature	->	List_Char	 [label="Sig"];
Type	->	Xtype	 [label="Plain"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Board"];
Int	->	Concept	 [label="prim"];
BoardEq_Int	->	Pos	 [label="PosDef"];
BoardEq_Int	->	Pos	 [label="PosDef"];
BoardEq_Int	->	Expr_Int	 [label="PosDef"];
Pos	->	Int	 [label="Index"];
Pos	->	List_Char	 [label="ForAll"];
Expr_Int	->	Concept	 [label="I"];
ValDef_Int	->	Signature	 [label="Val"];
ValDef_Int	->	Equation_Int	 [label="Val"];
ValDef_Int	->	Int	 [label="Val"];
Signature	->	Type	 [label="Sig"];
Signature	->	List_Char	 [label="Sig"];
Type	->	Ftype	 [label="Function"];
Ftype	->	Xtype	 [label="Ft"];
Ftype	->	Xtype	 [label="Ft"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Itype"];
Xtype	->	Btype	 [label="X"];
Btype	->	Concept	 [label="Itype"];
Equation_Int	->	Parlist	 [label="Feq"];
Equation_Int	->	Expr_Int	 [label="Feq"];
Parlist	->	Concept	 [label="Pars"];
Expr_Int	->	Op	 [label="Binop"];
Expr_Int	->	Expr_Int	 [label="Binop"];
Expr_Int	->	Expr_Int	 [label="Binop"];
Op	->	Concept	 [label="Plus"];
Expr_Int	->	Concept	 [label="Ref"];
Expr_Int	->	Concept	 [label="I"];
Int	->	Concept	 [label="prim"];

}