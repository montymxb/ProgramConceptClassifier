strict digraph G {
Game	 [label="Game"];
UName	 [label="UName"];
Char	 [label="Char"];
Concept	 [label="Concept"];
TypeOrValDef	 [label="TypeOrValDef"];
TOV_TypeAssign	 [label="TOV_TypeAssign"];
TypeAssign	 [label="TypeAssign"];
TypeAssignXType	 [label="TypeAssignXType"];
XType	 [label="XType"];
X_EType	 [label="X_EType"];
EType	 [label="EType"];
X_ExtEType	 [label="X_ExtEType"];
BType	 [label="BType"];
BBoard	 [label="BBoard"];
Board	 [label="Board"];
Int	 [label="Int"];
BInt	 [label="BInt"];
Input	 [label="Input"];
ValDef	 [label="ValDef"];
Signature	 [label="Signature"];
FSig	 [label="FSig"];
LName	 [label="LName"];
FType	 [label="FType"];
Equation	 [label="Equation"];
FuncEquation	 [label="FuncEquation"];
Expr	 [label="Expr"];
Cond	 [label="Cond"];
BinOp	 [label="BinOp"];
Ref	 [label="Ref"];
Greater	 [label="Greater"];
IVal	 [label="IVal"];
Times	 [label="Times"];
App	 [label="App"];
Minus	 [label="Minus"];
Game	->	UName	 [label=""];
Game	->	TypeOrValDef	 [label=""];
Game	->	Board	 [label=""];
Game	->	Input	 [label=""];
Game	->	ValDef	 [label=""];
UName	->	Char	 [label=""];
Char	->	Concept	 [label=""];
TypeOrValDef	->	TOV_TypeAssign	 [label=""];
TOV_TypeAssign	->	TypeAssign	 [label=""];
TypeAssign	->	TypeAssignXType	 [label=""];
TypeAssignXType	->	UName	 [label=""];
TypeAssignXType	->	XType	 [label=""];
XType	->	X_EType	 [label=""];
X_EType	->	EType	 [label=""];
EType	->	UName	 [label=""];
XType	->	X_ExtEType	 [label=""];
X_ExtEType	->	BType	 [label=""];
X_ExtEType	->	EType	 [label=""];
BType	->	BBoard	 [label=""];
Board	->	Int	 [label=""];
Int	->	Concept	 [label=""];
BType	->	BInt	 [label=""];
BInt	->	Int	 [label=""];
BBoard	->	Concept	 [label=""];
Input	->	BType	 [label=""];
ValDef	->	Signature	 [label=""];
ValDef	->	Equation	 [label=""];
Signature	->	FSig	 [label=""];
FSig	->	LName	 [label=""];
FSig	->	FType	 [label=""];
LName	->	Char	 [label=""];
FType	->	BType	 [label=""];
Equation	->	FuncEquation	 [label=""];
FuncEquation	->	LName	 [label=""];
FuncEquation	->	Expr	 [label=""];
Expr	->	Cond	 [label=""];
Expr	->	BinOp	 [label=""];
Expr	->	Ref	 [label=""];
Ref	->	LName	 [label=""];
BinOp	->	Greater	 [label=""];
Greater	->	Concept	 [label=""];
Expr	->	IVal	 [label=""];
IVal	->	Int	 [label=""];
BinOp	->	Times	 [label=""];
Times	->	Concept	 [label=""];
Expr	->	App	 [label=""];
App	->	LName	 [label=""];
BinOp	->	Minus	 [label=""];
Minus	->	Concept	 [label=""];
Cond	->	Concept	 [label=""];

}